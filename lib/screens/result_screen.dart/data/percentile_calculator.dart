class PercentileCalculator {
  static const Map<int, List<double>> _percentileDataMale = {
    //  1st   3rd   5th   15th  25th  50th  75th  85th  95th  97th  99th
    2: [14.5, 14.7, 15.0, 15.7, 16.5, 17.5, 18.1, 18.6, 19.3, 19.8],
    3: [14.5, 14.7, 15.0, 15.7, 16.5, 17.5, 18.1, 18.5, 19.2, 19.7],
    4: [14.4, 14.6, 15.0, 15.6, 16.4, 17.4, 18.0, 18.4, 19.1, 19.6],
    5: [12.7, 13.1, 13.4, 14.0, 14.4, 15.3, 16.2, 16.7, 17.7, 18.1, 18.8],
    6: [12.7, 13.2, 13.4, 14.0, 14.5, 15.3, 16.3, 16.8, 17.9, 18.3, 19.2],
    7: [12.9, 13.3, 13.5, 14.2, 14.6, 15.5, 16.5, 17.1, 18.3, 18.8, 19.8],
    8: [13.0, 13.4, 13.7, 14.4, 14.8, 15.8, 16.9, 17.5, 18.9, 19.4, 20.6],
    9: [13.2, 13.6, 13.9, 14.6, 15.1, 16.1, 17.3, 18.0, 19.5, 20.2, 21.6],
    10: [13.4, 13.9, 14.2, 14.9, 15.4, 16.5, 17.8, 18.6, 20.3, 21.1, 22.8],
    11: [13.7, 14.2, 14.5, 15.3, 15.8, 17.0, 18.4, 19.3, 21.2, 22.1, 24.0],
    12: [14.1, 14.6, 14.9, 15.8, 16.3, 17.6, 19.1, 20.1, 22.2, 23.1, 25.3],
    13: [14.6, 15.1, 15.4, 16.4, 17.0, 18.3, 19.9, 21.0, 23.2, 24.3, 26.7],
    14: [15.1, 15.7, 16.0, 17.0, 17.7, 19.1, 20.8, 22.0, 24.3, 25.4, 27.9],
    15: [15.6, 16.2, 16.6, 17.6, 18.3, 19.8, 21.7, 22.9, 25.3, 26.4, 28.9],
    16: [16.1, 16.7, 17.1, 18.2, 19.0, 20.6, 22.5, 23.7, 26.2, 27.3, 29.8],
    17: [16.4, 17.2, 17.6, 18.7, 19.5, 21.2, 23.2, 24.5, 27.0, 28.1, 30.5],
    18: [16.8, 17.5, 18.0, 19.2, 20.0, 21.8, 23.8, 25.1, 27.6, 28.7, 31.0],
    19: [17.0, 17.8, 18.2, 19.5, 20.4, 22.2, 24.3, 25.6, 28.1, 29.1, 31.4],
  };

  static const Map<int, List<double>> _percentileDataFemale = {
    //  1st   3rd   5th   15th  25th  50th  75th  85th  95th  97th  99th
    2: [14.1, 14.3, 14.8, 15.5, 16.4, 17.4, 18.0, 18.4, 19.1, 19.5],
    3: [14.1, 14.3, 14.7, 15.4, 16.3, 17.3, 17.9, 18.3, 19.0, 19.5],
    4: [14.1, 14.3, 14.7, 15.4, 16.3, 17.3, 17.8, 18.3, 18.9, 19.4],
    5: [12.4, 12.9, 13.1, 13.8, 14.3, 15.2, 16.3, 16.9, 18.1, 18.6, 19.6],
    6: [12.4, 12.8, 13.1, 13.8, 14.3, 15.3, 16.4, 17.1, 18.4, 19.0, 20.1],
    7: [12.4, 12.9, 13.1, 13.9, 14.4, 15.4, 16.6, 17.4, 18.9, 19.5, 20.9],
    8: [12.6, 13.0, 13.3, 14.1, 14.6, 15.7, 17.0, 17.9, 19.5, 20.2, 21.8],
    9: [12.8, 13.3, 13.6, 14.4, 15.0, 16.1, 17.6, 18.5, 20.3, 21.1, 23.0],
    10: [13.1, 13.6, 14.0, 14.8, 15.4, 16.7, 18.2, 19.2, 21.2, 22.2, 24.2],
    11: [13.5, 14.1, 14.4, 15.3, 16.0, 17.3, 19.0, 20.0, 22.2, 23.3, 25.6],
    12: [14.0, 14.6, 15.0, 15.9, 16.6, 18.1, 19.9, 21.0, 23.4, 24.5, 26.9],
    13: [14.5, 15.2, 15.5, 16.6, 17.3, 18.9, 20.8, 22.0, 24.5, 25.7, 28.2],
    14: [15.0, 15.7, 16.1, 17.2, 18.0, 19.6, 21.6, 22.9, 25.6, 26.8, 29.4],
    15: [15.4, 16.1, 16.5, 17.7, 18.5, 20.3, 22.4, 23.7, 26.4, 27.6, 30.3],
    16: [15.6, 16.4, 16.8, 18.1, 18.9, 20.7, 22.9, 24.3, 27.0, 28.2, 30.9],
    17: [15.8, 16.6, 17.0, 18.3, 19.2, 21.1, 23.3, 24.7, 27.4, 28.6, 31.3],
    18: [15.9, 16.7, 17.2, 18.5, 19.4, 21.3, 23.5, 24.9, 27.7, 28.9, 31.5],
    19: [15.9, 16.7, 17.2, 18.6, 19.5, 21.4, 23.7, 25.1, 27.8, 29.0, 31.6],
  };

  static String getWeightPercentile(double bmi, int age, String gender) {
    if (age < 2 || age > 19) {
      return 'Age out of range';
    }

    List<double> percentiles = gender == 'Male'
        ? _percentileDataMale[age] ?? []
        : _percentileDataFemale[age] ?? [];

    if (percentiles.isEmpty) {
      return 'Data not available';
    }

    for (int i = 0; i < percentiles.length; i++) {
      if (bmi < percentiles[i]) {
        // If the BMI is less than the current percentile value, return the previous percentile
        if (i == 0) {
          return 'Below 1st percentile';
        } else {
          int percentile;
          switch (i) {
            case 0:
              percentile = 1;
              break;
            case 1:
              percentile = 3;
              break;
            case 2:
              percentile = 5;
              break;
            case 3:
              percentile = 15;
              break;
            case 4:
              percentile = 25;
              break;
            case 5:
              percentile = 50;
              break;
            case 6:
              percentile = 75;
              break;
            case 7:
              percentile = 85;
              break;
            case 8:
              percentile = 95;
              break;
            case 9:
              percentile = 97;
              break;
            case 10:
              percentile = 99;
              break;
            default:
              percentile = 100;
          }
          return '${percentile}th percentile';
        }
      }
    }

    return '99th percentile or higher';
  }
}
